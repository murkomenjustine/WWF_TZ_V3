//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WWF.eprocurement {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="eprocurement_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement")]
    public partial class eprocurement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FnChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetSendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnReqforRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSupplierGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSupplierSpecialGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCommContactDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnBusinessProfileDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBankDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditBankDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteBankDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertShareholderDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditShareholderDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteShareholderDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertLitigationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditLitigationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteLitigationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertPastExperienceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditPastExperienceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeletePastExperienceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertVendorRegDocsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteVendorRegDocsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelPurchaseRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPurchaseRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRequisitionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateRequisitionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnConsultantGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertConsultantQualificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateConsultantQualificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteConsultantQualificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertConsultantRefereeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateConsultantRefereeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteConsultantRefereeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertConsultantRegDocsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateTenderLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddemployeepassportphotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateTenderLinePriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitTenderOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public eprocurement() {
            this.Url = global::WWF.Properties.Settings.Default.WWF_eprocurement_eprocurement;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FnChangePasswordCompletedEventHandler FnChangePasswordCompleted;
        
        /// <remarks/>
        public event FnResetPasswordCompletedEventHandler FnResetPasswordCompleted;
        
        /// <remarks/>
        public event ResetSendEmailCompletedEventHandler ResetSendEmailCompleted;
        
        /// <remarks/>
        public event FnReqforRegistrationCompletedEventHandler FnReqforRegistrationCompleted;
        
        /// <remarks/>
        public event FnSupplierGeneralDetailsCompletedEventHandler FnSupplierGeneralDetailsCompleted;
        
        /// <remarks/>
        public event FnSupplierSpecialGroupCompletedEventHandler FnSupplierSpecialGroupCompleted;
        
        /// <remarks/>
        public event FnCommContactDetailsCompletedEventHandler FnCommContactDetailsCompleted;
        
        /// <remarks/>
        public event FnBusinessProfileDetailsCompletedEventHandler FnBusinessProfileDetailsCompleted;
        
        /// <remarks/>
        public event FnInsertBankDetailsCompletedEventHandler FnInsertBankDetailsCompleted;
        
        /// <remarks/>
        public event FnEditBankDetailsCompletedEventHandler FnEditBankDetailsCompleted;
        
        /// <remarks/>
        public event FnDeleteBankDetailsCompletedEventHandler FnDeleteBankDetailsCompleted;
        
        /// <remarks/>
        public event FnInsertShareholderDetailsCompletedEventHandler FnInsertShareholderDetailsCompleted;
        
        /// <remarks/>
        public event FnEditShareholderDetailsCompletedEventHandler FnEditShareholderDetailsCompleted;
        
        /// <remarks/>
        public event FnDeleteShareholderDetailsCompletedEventHandler FnDeleteShareholderDetailsCompleted;
        
        /// <remarks/>
        public event FnInsertLitigationCompletedEventHandler FnInsertLitigationCompleted;
        
        /// <remarks/>
        public event FnEditLitigationCompletedEventHandler FnEditLitigationCompleted;
        
        /// <remarks/>
        public event FnDeleteLitigationCompletedEventHandler FnDeleteLitigationCompleted;
        
        /// <remarks/>
        public event FnInsertPastExperienceCompletedEventHandler FnInsertPastExperienceCompleted;
        
        /// <remarks/>
        public event FnEditPastExperienceCompletedEventHandler FnEditPastExperienceCompleted;
        
        /// <remarks/>
        public event FnDeletePastExperienceCompletedEventHandler FnDeletePastExperienceCompleted;
        
        /// <remarks/>
        public event FnInsertStaffCompletedEventHandler FnInsertStaffCompleted;
        
        /// <remarks/>
        public event FnEditStaffCompletedEventHandler FnEditStaffCompleted;
        
        /// <remarks/>
        public event FnDeleteStaffCompletedEventHandler FnDeleteStaffCompleted;
        
        /// <remarks/>
        public event FnInsertVendorRegDocsCompletedEventHandler FnInsertVendorRegDocsCompleted;
        
        /// <remarks/>
        public event FnDeleteVendorRegDocsCompletedEventHandler FnDeleteVendorRegDocsCompleted;
        
        /// <remarks/>
        public event FnSubmitProfileCompletedEventHandler FnSubmitProfileCompleted;
        
        /// <remarks/>
        public event ResetPasswordCompletedEventHandler ResetPasswordCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event CancelPurchaseRequisitionApprovalCompletedEventHandler CancelPurchaseRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event SendPurchaseRequisitionApprovalCompletedEventHandler SendPurchaseRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event DeleteRequisitionLineCompletedEventHandler DeleteRequisitionLineCompleted;
        
        /// <remarks/>
        public event FnCreateRequisitionCompletedEventHandler FnCreateRequisitionCompleted;
        
        /// <remarks/>
        public event FnCreateRequisitionLineCompletedEventHandler FnCreateRequisitionLineCompleted;
        
        /// <remarks/>
        public event FnConsultantGeneralDetailsCompletedEventHandler FnConsultantGeneralDetailsCompleted;
        
        /// <remarks/>
        public event FnInsertConsultantQualificationCompletedEventHandler FnInsertConsultantQualificationCompleted;
        
        /// <remarks/>
        public event FnUpdateConsultantQualificationCompletedEventHandler FnUpdateConsultantQualificationCompleted;
        
        /// <remarks/>
        public event FnDeleteConsultantQualificationCompletedEventHandler FnDeleteConsultantQualificationCompleted;
        
        /// <remarks/>
        public event FnInsertConsultantRefereeCompletedEventHandler FnInsertConsultantRefereeCompleted;
        
        /// <remarks/>
        public event FnUpdateConsultantRefereeCompletedEventHandler FnUpdateConsultantRefereeCompleted;
        
        /// <remarks/>
        public event FnDeleteConsultantRefereeCompletedEventHandler FnDeleteConsultantRefereeCompleted;
        
        /// <remarks/>
        public event FnInsertConsultantRegDocsCompletedEventHandler FnInsertConsultantRegDocsCompleted;
        
        /// <remarks/>
        public event FnUpdateTenderLineCompletedEventHandler FnUpdateTenderLineCompleted;
        
        /// <remarks/>
        public event AddemployeepassportphotoCompletedEventHandler AddemployeepassportphotoCompleted;
        
        /// <remarks/>
        public event FnUpdateTenderLinePriceCompletedEventHandler FnUpdateTenderLinePriceCompleted;
        
        /// <remarks/>
        public event FnSubmitTenderCompletedEventHandler FnSubmitTenderCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnChangePassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnChangePassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnChangePassword(string emailaddress, string currentPassword, string newPassword, string confirmNewPassword) {
            object[] results = this.Invoke("FnChangePassword", new object[] {
                        emailaddress,
                        currentPassword,
                        newPassword,
                        confirmNewPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnChangePasswordAsync(string emailaddress, string currentPassword, string newPassword, string confirmNewPassword) {
            this.FnChangePasswordAsync(emailaddress, currentPassword, newPassword, confirmNewPassword, null);
        }
        
        /// <remarks/>
        public void FnChangePasswordAsync(string emailaddress, string currentPassword, string newPassword, string confirmNewPassword, object userState) {
            if ((this.FnChangePasswordOperationCompleted == null)) {
                this.FnChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("FnChangePassword", new object[] {
                        emailaddress,
                        currentPassword,
                        newPassword,
                        confirmNewPassword}, this.FnChangePasswordOperationCompleted, userState);
        }
        
        private void OnFnChangePasswordOperationCompleted(object arg) {
            if ((this.FnChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnChangePasswordCompleted(this, new FnChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnResetPassword(string emailaddress) {
            object[] results = this.Invoke("FnResetPassword", new object[] {
                        emailaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnResetPasswordAsync(string emailaddress) {
            this.FnResetPasswordAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void FnResetPasswordAsync(string emailaddress, object userState) {
            if ((this.FnResetPasswordOperationCompleted == null)) {
                this.FnResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("FnResetPassword", new object[] {
                        emailaddress}, this.FnResetPasswordOperationCompleted, userState);
        }
        
        private void OnFnResetPasswordOperationCompleted(object arg) {
            if ((this.FnResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnResetPasswordCompleted(this, new FnResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:ResetSendEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="ResetSendEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResetSendEmail(string emailaddress) {
            this.Invoke("ResetSendEmail", new object[] {
                        emailaddress});
        }
        
        /// <remarks/>
        public void ResetSendEmailAsync(string emailaddress) {
            this.ResetSendEmailAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void ResetSendEmailAsync(string emailaddress, object userState) {
            if ((this.ResetSendEmailOperationCompleted == null)) {
                this.ResetSendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetSendEmailOperationCompleted);
            }
            this.InvokeAsync("ResetSendEmail", new object[] {
                        emailaddress}, this.ResetSendEmailOperationCompleted, userState);
        }
        
        private void OnResetSendEmailOperationCompleted(object arg) {
            if ((this.ResetSendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetSendEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnReqforRegistration", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnReqforRegistration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnReqforRegistration(string registeredBusinessName, string phoneNumber, string emailAddress, string taxRegkraPin, string contactName) {
            object[] results = this.Invoke("FnReqforRegistration", new object[] {
                        registeredBusinessName,
                        phoneNumber,
                        emailAddress,
                        taxRegkraPin,
                        contactName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnReqforRegistrationAsync(string registeredBusinessName, string phoneNumber, string emailAddress, string taxRegkraPin, string contactName) {
            this.FnReqforRegistrationAsync(registeredBusinessName, phoneNumber, emailAddress, taxRegkraPin, contactName, null);
        }
        
        /// <remarks/>
        public void FnReqforRegistrationAsync(string registeredBusinessName, string phoneNumber, string emailAddress, string taxRegkraPin, string contactName, object userState) {
            if ((this.FnReqforRegistrationOperationCompleted == null)) {
                this.FnReqforRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnReqforRegistrationOperationCompleted);
            }
            this.InvokeAsync("FnReqforRegistration", new object[] {
                        registeredBusinessName,
                        phoneNumber,
                        emailAddress,
                        taxRegkraPin,
                        contactName}, this.FnReqforRegistrationOperationCompleted, userState);
        }
        
        private void OnFnReqforRegistrationOperationCompleted(object arg) {
            if ((this.FnReqforRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnReqforRegistrationCompleted(this, new FnReqforRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSupplierGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSupplierGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSupplierGeneralDetails(string vendorNo, string suppliername, string taxregistrationno, string taxregistrationcountry, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime registrationdate, string gregistrationincorporationno, string businesstype, int ownershiptype, string industrygroup, string language, int suppliertype, string vision, string mission, bool specialgroup) {
            object[] results = this.Invoke("FnSupplierGeneralDetails", new object[] {
                        vendorNo,
                        suppliername,
                        taxregistrationno,
                        taxregistrationcountry,
                        registrationdate,
                        gregistrationincorporationno,
                        businesstype,
                        ownershiptype,
                        industrygroup,
                        language,
                        suppliertype,
                        vision,
                        mission,
                        specialgroup});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSupplierGeneralDetailsAsync(string vendorNo, string suppliername, string taxregistrationno, string taxregistrationcountry, System.DateTime registrationdate, string gregistrationincorporationno, string businesstype, int ownershiptype, string industrygroup, string language, int suppliertype, string vision, string mission, bool specialgroup) {
            this.FnSupplierGeneralDetailsAsync(vendorNo, suppliername, taxregistrationno, taxregistrationcountry, registrationdate, gregistrationincorporationno, businesstype, ownershiptype, industrygroup, language, suppliertype, vision, mission, specialgroup, null);
        }
        
        /// <remarks/>
        public void FnSupplierGeneralDetailsAsync(string vendorNo, string suppliername, string taxregistrationno, string taxregistrationcountry, System.DateTime registrationdate, string gregistrationincorporationno, string businesstype, int ownershiptype, string industrygroup, string language, int suppliertype, string vision, string mission, bool specialgroup, object userState) {
            if ((this.FnSupplierGeneralDetailsOperationCompleted == null)) {
                this.FnSupplierGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSupplierGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("FnSupplierGeneralDetails", new object[] {
                        vendorNo,
                        suppliername,
                        taxregistrationno,
                        taxregistrationcountry,
                        registrationdate,
                        gregistrationincorporationno,
                        businesstype,
                        ownershiptype,
                        industrygroup,
                        language,
                        suppliertype,
                        vision,
                        mission,
                        specialgroup}, this.FnSupplierGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnFnSupplierGeneralDetailsOperationCompleted(object arg) {
            if ((this.FnSupplierGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSupplierGeneralDetailsCompleted(this, new FnSupplierGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSupplierSpecialGroup", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSupplierSpecialGroup_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSupplierSpecialGroup(string vendorNo, string certificateno, string suppliercategory, string certifyingagaency, string productservices, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime certificateeffectivedate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime certificateexpirydate) {
            object[] results = this.Invoke("FnSupplierSpecialGroup", new object[] {
                        vendorNo,
                        certificateno,
                        suppliercategory,
                        certifyingagaency,
                        productservices,
                        certificateeffectivedate,
                        certificateexpirydate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSupplierSpecialGroupAsync(string vendorNo, string certificateno, string suppliercategory, string certifyingagaency, string productservices, System.DateTime certificateeffectivedate, System.DateTime certificateexpirydate) {
            this.FnSupplierSpecialGroupAsync(vendorNo, certificateno, suppliercategory, certifyingagaency, productservices, certificateeffectivedate, certificateexpirydate, null);
        }
        
        /// <remarks/>
        public void FnSupplierSpecialGroupAsync(string vendorNo, string certificateno, string suppliercategory, string certifyingagaency, string productservices, System.DateTime certificateeffectivedate, System.DateTime certificateexpirydate, object userState) {
            if ((this.FnSupplierSpecialGroupOperationCompleted == null)) {
                this.FnSupplierSpecialGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSupplierSpecialGroupOperationCompleted);
            }
            this.InvokeAsync("FnSupplierSpecialGroup", new object[] {
                        vendorNo,
                        certificateno,
                        suppliercategory,
                        certifyingagaency,
                        productservices,
                        certificateeffectivedate,
                        certificateexpirydate}, this.FnSupplierSpecialGroupOperationCompleted, userState);
        }
        
        private void OnFnSupplierSpecialGroupOperationCompleted(object arg) {
            if ((this.FnSupplierSpecialGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSupplierSpecialGroupCompleted(this, new FnSupplierSpecialGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnCommContactDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnCommContactDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCommContactDetails(string vendorNo, string address, string address2, string phone, string email, string buildinghouse, string floor, string plot, string street) {
            object[] results = this.Invoke("FnCommContactDetails", new object[] {
                        vendorNo,
                        address,
                        address2,
                        phone,
                        email,
                        buildinghouse,
                        floor,
                        plot,
                        street});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCommContactDetailsAsync(string vendorNo, string address, string address2, string phone, string email, string buildinghouse, string floor, string plot, string street) {
            this.FnCommContactDetailsAsync(vendorNo, address, address2, phone, email, buildinghouse, floor, plot, street, null);
        }
        
        /// <remarks/>
        public void FnCommContactDetailsAsync(string vendorNo, string address, string address2, string phone, string email, string buildinghouse, string floor, string plot, string street, object userState) {
            if ((this.FnCommContactDetailsOperationCompleted == null)) {
                this.FnCommContactDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCommContactDetailsOperationCompleted);
            }
            this.InvokeAsync("FnCommContactDetails", new object[] {
                        vendorNo,
                        address,
                        address2,
                        phone,
                        email,
                        buildinghouse,
                        floor,
                        plot,
                        street}, this.FnCommContactDetailsOperationCompleted, userState);
        }
        
        private void OnFnCommContactDetailsOperationCompleted(object arg) {
            if ((this.FnCommContactDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCommContactDetailsCompleted(this, new FnCommContactDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnBusinessProfileDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnBusinessProfileDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnBusinessProfileDetails(string vendorNo, string companysize, decimal nominalcapital, int dealertype, decimal maxvalueofbusiness, string businesprofilesuppliercategory, string natureofbusiness) {
            object[] results = this.Invoke("FnBusinessProfileDetails", new object[] {
                        vendorNo,
                        companysize,
                        nominalcapital,
                        dealertype,
                        maxvalueofbusiness,
                        businesprofilesuppliercategory,
                        natureofbusiness});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnBusinessProfileDetailsAsync(string vendorNo, string companysize, decimal nominalcapital, int dealertype, decimal maxvalueofbusiness, string businesprofilesuppliercategory, string natureofbusiness) {
            this.FnBusinessProfileDetailsAsync(vendorNo, companysize, nominalcapital, dealertype, maxvalueofbusiness, businesprofilesuppliercategory, natureofbusiness, null);
        }
        
        /// <remarks/>
        public void FnBusinessProfileDetailsAsync(string vendorNo, string companysize, decimal nominalcapital, int dealertype, decimal maxvalueofbusiness, string businesprofilesuppliercategory, string natureofbusiness, object userState) {
            if ((this.FnBusinessProfileDetailsOperationCompleted == null)) {
                this.FnBusinessProfileDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnBusinessProfileDetailsOperationCompleted);
            }
            this.InvokeAsync("FnBusinessProfileDetails", new object[] {
                        vendorNo,
                        companysize,
                        nominalcapital,
                        dealertype,
                        maxvalueofbusiness,
                        businesprofilesuppliercategory,
                        natureofbusiness}, this.FnBusinessProfileDetailsOperationCompleted, userState);
        }
        
        private void OnFnBusinessProfileDetailsOperationCompleted(object arg) {
            if ((this.FnBusinessProfileDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnBusinessProfileDetailsCompleted(this, new FnBusinessProfileDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertBankDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertBankDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBankDetails(string vendorNo, string bankcodes, string bankname, string bankbranchs, string bankaccountno) {
            object[] results = this.Invoke("FnInsertBankDetails", new object[] {
                        vendorNo,
                        bankcodes,
                        bankname,
                        bankbranchs,
                        bankaccountno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBankDetailsAsync(string vendorNo, string bankcodes, string bankname, string bankbranchs, string bankaccountno) {
            this.FnInsertBankDetailsAsync(vendorNo, bankcodes, bankname, bankbranchs, bankaccountno, null);
        }
        
        /// <remarks/>
        public void FnInsertBankDetailsAsync(string vendorNo, string bankcodes, string bankname, string bankbranchs, string bankaccountno, object userState) {
            if ((this.FnInsertBankDetailsOperationCompleted == null)) {
                this.FnInsertBankDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBankDetailsOperationCompleted);
            }
            this.InvokeAsync("FnInsertBankDetails", new object[] {
                        vendorNo,
                        bankcodes,
                        bankname,
                        bankbranchs,
                        bankaccountno}, this.FnInsertBankDetailsOperationCompleted, userState);
        }
        
        private void OnFnInsertBankDetailsOperationCompleted(object arg) {
            if ((this.FnInsertBankDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBankDetailsCompleted(this, new FnInsertBankDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnEditBankDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnEditBankDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditBankDetails(string vendorNo, string bankcodes, string bankname, string bankbranchs, string bankaccountno) {
            object[] results = this.Invoke("FnEditBankDetails", new object[] {
                        vendorNo,
                        bankcodes,
                        bankname,
                        bankbranchs,
                        bankaccountno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditBankDetailsAsync(string vendorNo, string bankcodes, string bankname, string bankbranchs, string bankaccountno) {
            this.FnEditBankDetailsAsync(vendorNo, bankcodes, bankname, bankbranchs, bankaccountno, null);
        }
        
        /// <remarks/>
        public void FnEditBankDetailsAsync(string vendorNo, string bankcodes, string bankname, string bankbranchs, string bankaccountno, object userState) {
            if ((this.FnEditBankDetailsOperationCompleted == null)) {
                this.FnEditBankDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditBankDetailsOperationCompleted);
            }
            this.InvokeAsync("FnEditBankDetails", new object[] {
                        vendorNo,
                        bankcodes,
                        bankname,
                        bankbranchs,
                        bankaccountno}, this.FnEditBankDetailsOperationCompleted, userState);
        }
        
        private void OnFnEditBankDetailsOperationCompleted(object arg) {
            if ((this.FnEditBankDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditBankDetailsCompleted(this, new FnEditBankDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteBankDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteBankDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteBankDetails(string vendorNo, string bankcodes) {
            object[] results = this.Invoke("FnDeleteBankDetails", new object[] {
                        vendorNo,
                        bankcodes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteBankDetailsAsync(string vendorNo, string bankcodes) {
            this.FnDeleteBankDetailsAsync(vendorNo, bankcodes, null);
        }
        
        /// <remarks/>
        public void FnDeleteBankDetailsAsync(string vendorNo, string bankcodes, object userState) {
            if ((this.FnDeleteBankDetailsOperationCompleted == null)) {
                this.FnDeleteBankDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteBankDetailsOperationCompleted);
            }
            this.InvokeAsync("FnDeleteBankDetails", new object[] {
                        vendorNo,
                        bankcodes}, this.FnDeleteBankDetailsOperationCompleted, userState);
        }
        
        private void OnFnDeleteBankDetailsOperationCompleted(object arg) {
            if ((this.FnDeleteBankDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteBankDetailsCompleted(this, new FnDeleteBankDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertShareholderDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertShareholderDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertShareholderDetails(string vendorNo, string directorname, string idnumber, int citizenshiptype, decimal ownershippercentage, string phonenumber, string shareholderemail, string shareholderaddress) {
            object[] results = this.Invoke("FnInsertShareholderDetails", new object[] {
                        vendorNo,
                        directorname,
                        idnumber,
                        citizenshiptype,
                        ownershippercentage,
                        phonenumber,
                        shareholderemail,
                        shareholderaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertShareholderDetailsAsync(string vendorNo, string directorname, string idnumber, int citizenshiptype, decimal ownershippercentage, string phonenumber, string shareholderemail, string shareholderaddress) {
            this.FnInsertShareholderDetailsAsync(vendorNo, directorname, idnumber, citizenshiptype, ownershippercentage, phonenumber, shareholderemail, shareholderaddress, null);
        }
        
        /// <remarks/>
        public void FnInsertShareholderDetailsAsync(string vendorNo, string directorname, string idnumber, int citizenshiptype, decimal ownershippercentage, string phonenumber, string shareholderemail, string shareholderaddress, object userState) {
            if ((this.FnInsertShareholderDetailsOperationCompleted == null)) {
                this.FnInsertShareholderDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertShareholderDetailsOperationCompleted);
            }
            this.InvokeAsync("FnInsertShareholderDetails", new object[] {
                        vendorNo,
                        directorname,
                        idnumber,
                        citizenshiptype,
                        ownershippercentage,
                        phonenumber,
                        shareholderemail,
                        shareholderaddress}, this.FnInsertShareholderDetailsOperationCompleted, userState);
        }
        
        private void OnFnInsertShareholderDetailsOperationCompleted(object arg) {
            if ((this.FnInsertShareholderDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertShareholderDetailsCompleted(this, new FnInsertShareholderDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnEditShareholderDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnEditShareholderDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditShareholderDetails(string vendorNo, int lineno, string directorname, string idnumber, int citizenshiptype, decimal ownershippercentage, string phonenumber, string shareholderemail, string shareholderaddress) {
            object[] results = this.Invoke("FnEditShareholderDetails", new object[] {
                        vendorNo,
                        lineno,
                        directorname,
                        idnumber,
                        citizenshiptype,
                        ownershippercentage,
                        phonenumber,
                        shareholderemail,
                        shareholderaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditShareholderDetailsAsync(string vendorNo, int lineno, string directorname, string idnumber, int citizenshiptype, decimal ownershippercentage, string phonenumber, string shareholderemail, string shareholderaddress) {
            this.FnEditShareholderDetailsAsync(vendorNo, lineno, directorname, idnumber, citizenshiptype, ownershippercentage, phonenumber, shareholderemail, shareholderaddress, null);
        }
        
        /// <remarks/>
        public void FnEditShareholderDetailsAsync(string vendorNo, int lineno, string directorname, string idnumber, int citizenshiptype, decimal ownershippercentage, string phonenumber, string shareholderemail, string shareholderaddress, object userState) {
            if ((this.FnEditShareholderDetailsOperationCompleted == null)) {
                this.FnEditShareholderDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditShareholderDetailsOperationCompleted);
            }
            this.InvokeAsync("FnEditShareholderDetails", new object[] {
                        vendorNo,
                        lineno,
                        directorname,
                        idnumber,
                        citizenshiptype,
                        ownershippercentage,
                        phonenumber,
                        shareholderemail,
                        shareholderaddress}, this.FnEditShareholderDetailsOperationCompleted, userState);
        }
        
        private void OnFnEditShareholderDetailsOperationCompleted(object arg) {
            if ((this.FnEditShareholderDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditShareholderDetailsCompleted(this, new FnEditShareholderDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteShareholderDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteShareholderDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteShareholderDetails(string vendorNo, int lineno) {
            object[] results = this.Invoke("FnDeleteShareholderDetails", new object[] {
                        vendorNo,
                        lineno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteShareholderDetailsAsync(string vendorNo, int lineno) {
            this.FnDeleteShareholderDetailsAsync(vendorNo, lineno, null);
        }
        
        /// <remarks/>
        public void FnDeleteShareholderDetailsAsync(string vendorNo, int lineno, object userState) {
            if ((this.FnDeleteShareholderDetailsOperationCompleted == null)) {
                this.FnDeleteShareholderDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteShareholderDetailsOperationCompleted);
            }
            this.InvokeAsync("FnDeleteShareholderDetails", new object[] {
                        vendorNo,
                        lineno}, this.FnDeleteShareholderDetailsOperationCompleted, userState);
        }
        
        private void OnFnDeleteShareholderDetailsOperationCompleted(object arg) {
            if ((this.FnDeleteShareholderDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteShareholderDetailsCompleted(this, new FnDeleteShareholderDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertLitigation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertLitigation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertLitigation(string vendorNo, int categoryofdispute, string descriptionofdispute, string disputeparties, string yearofdispute, decimal disputeamount, int awardtype) {
            object[] results = this.Invoke("FnInsertLitigation", new object[] {
                        vendorNo,
                        categoryofdispute,
                        descriptionofdispute,
                        disputeparties,
                        yearofdispute,
                        disputeamount,
                        awardtype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertLitigationAsync(string vendorNo, int categoryofdispute, string descriptionofdispute, string disputeparties, string yearofdispute, decimal disputeamount, int awardtype) {
            this.FnInsertLitigationAsync(vendorNo, categoryofdispute, descriptionofdispute, disputeparties, yearofdispute, disputeamount, awardtype, null);
        }
        
        /// <remarks/>
        public void FnInsertLitigationAsync(string vendorNo, int categoryofdispute, string descriptionofdispute, string disputeparties, string yearofdispute, decimal disputeamount, int awardtype, object userState) {
            if ((this.FnInsertLitigationOperationCompleted == null)) {
                this.FnInsertLitigationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertLitigationOperationCompleted);
            }
            this.InvokeAsync("FnInsertLitigation", new object[] {
                        vendorNo,
                        categoryofdispute,
                        descriptionofdispute,
                        disputeparties,
                        yearofdispute,
                        disputeamount,
                        awardtype}, this.FnInsertLitigationOperationCompleted, userState);
        }
        
        private void OnFnInsertLitigationOperationCompleted(object arg) {
            if ((this.FnInsertLitigationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertLitigationCompleted(this, new FnInsertLitigationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnEditLitigation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnEditLitigation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditLitigation(string vendorNo, int lineno, int categoryofdispute, string descriptionofdispute, string disputeparties, string yearofdispute, decimal disputeamount, int awardtype) {
            object[] results = this.Invoke("FnEditLitigation", new object[] {
                        vendorNo,
                        lineno,
                        categoryofdispute,
                        descriptionofdispute,
                        disputeparties,
                        yearofdispute,
                        disputeamount,
                        awardtype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditLitigationAsync(string vendorNo, int lineno, int categoryofdispute, string descriptionofdispute, string disputeparties, string yearofdispute, decimal disputeamount, int awardtype) {
            this.FnEditLitigationAsync(vendorNo, lineno, categoryofdispute, descriptionofdispute, disputeparties, yearofdispute, disputeamount, awardtype, null);
        }
        
        /// <remarks/>
        public void FnEditLitigationAsync(string vendorNo, int lineno, int categoryofdispute, string descriptionofdispute, string disputeparties, string yearofdispute, decimal disputeamount, int awardtype, object userState) {
            if ((this.FnEditLitigationOperationCompleted == null)) {
                this.FnEditLitigationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditLitigationOperationCompleted);
            }
            this.InvokeAsync("FnEditLitigation", new object[] {
                        vendorNo,
                        lineno,
                        categoryofdispute,
                        descriptionofdispute,
                        disputeparties,
                        yearofdispute,
                        disputeamount,
                        awardtype}, this.FnEditLitigationOperationCompleted, userState);
        }
        
        private void OnFnEditLitigationOperationCompleted(object arg) {
            if ((this.FnEditLitigationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditLitigationCompleted(this, new FnEditLitigationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteLitigation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteLitigation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteLitigation(string vendorNo, int lineno) {
            object[] results = this.Invoke("FnDeleteLitigation", new object[] {
                        vendorNo,
                        lineno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteLitigationAsync(string vendorNo, int lineno) {
            this.FnDeleteLitigationAsync(vendorNo, lineno, null);
        }
        
        /// <remarks/>
        public void FnDeleteLitigationAsync(string vendorNo, int lineno, object userState) {
            if ((this.FnDeleteLitigationOperationCompleted == null)) {
                this.FnDeleteLitigationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteLitigationOperationCompleted);
            }
            this.InvokeAsync("FnDeleteLitigation", new object[] {
                        vendorNo,
                        lineno}, this.FnDeleteLitigationOperationCompleted, userState);
        }
        
        private void OnFnDeleteLitigationOperationCompleted(object arg) {
            if ((this.FnDeleteLitigationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteLitigationCompleted(this, new FnDeleteLitigationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertPastExperience", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertPastExperience_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertPastExperience(string vendorNo, string clientname, string assignmentproject, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime projectstartdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime projectenddate, string projectscopesummary, string contactrefno, string projectaddress, decimal projectvalue) {
            object[] results = this.Invoke("FnInsertPastExperience", new object[] {
                        vendorNo,
                        clientname,
                        assignmentproject,
                        projectstartdate,
                        projectenddate,
                        projectscopesummary,
                        contactrefno,
                        projectaddress,
                        projectvalue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertPastExperienceAsync(string vendorNo, string clientname, string assignmentproject, System.DateTime projectstartdate, System.DateTime projectenddate, string projectscopesummary, string contactrefno, string projectaddress, decimal projectvalue) {
            this.FnInsertPastExperienceAsync(vendorNo, clientname, assignmentproject, projectstartdate, projectenddate, projectscopesummary, contactrefno, projectaddress, projectvalue, null);
        }
        
        /// <remarks/>
        public void FnInsertPastExperienceAsync(string vendorNo, string clientname, string assignmentproject, System.DateTime projectstartdate, System.DateTime projectenddate, string projectscopesummary, string contactrefno, string projectaddress, decimal projectvalue, object userState) {
            if ((this.FnInsertPastExperienceOperationCompleted == null)) {
                this.FnInsertPastExperienceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertPastExperienceOperationCompleted);
            }
            this.InvokeAsync("FnInsertPastExperience", new object[] {
                        vendorNo,
                        clientname,
                        assignmentproject,
                        projectstartdate,
                        projectenddate,
                        projectscopesummary,
                        contactrefno,
                        projectaddress,
                        projectvalue}, this.FnInsertPastExperienceOperationCompleted, userState);
        }
        
        private void OnFnInsertPastExperienceOperationCompleted(object arg) {
            if ((this.FnInsertPastExperienceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertPastExperienceCompleted(this, new FnInsertPastExperienceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnEditPastExperience", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnEditPastExperience_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditPastExperience(string vendorNo, int lineno, string clientname, string assignmentproject, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime projectstartdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime projectenddate, string projectscopesummary, string contactrefno, string projectaddress, decimal projectvalue) {
            object[] results = this.Invoke("FnEditPastExperience", new object[] {
                        vendorNo,
                        lineno,
                        clientname,
                        assignmentproject,
                        projectstartdate,
                        projectenddate,
                        projectscopesummary,
                        contactrefno,
                        projectaddress,
                        projectvalue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditPastExperienceAsync(string vendorNo, int lineno, string clientname, string assignmentproject, System.DateTime projectstartdate, System.DateTime projectenddate, string projectscopesummary, string contactrefno, string projectaddress, decimal projectvalue) {
            this.FnEditPastExperienceAsync(vendorNo, lineno, clientname, assignmentproject, projectstartdate, projectenddate, projectscopesummary, contactrefno, projectaddress, projectvalue, null);
        }
        
        /// <remarks/>
        public void FnEditPastExperienceAsync(string vendorNo, int lineno, string clientname, string assignmentproject, System.DateTime projectstartdate, System.DateTime projectenddate, string projectscopesummary, string contactrefno, string projectaddress, decimal projectvalue, object userState) {
            if ((this.FnEditPastExperienceOperationCompleted == null)) {
                this.FnEditPastExperienceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditPastExperienceOperationCompleted);
            }
            this.InvokeAsync("FnEditPastExperience", new object[] {
                        vendorNo,
                        lineno,
                        clientname,
                        assignmentproject,
                        projectstartdate,
                        projectenddate,
                        projectscopesummary,
                        contactrefno,
                        projectaddress,
                        projectvalue}, this.FnEditPastExperienceOperationCompleted, userState);
        }
        
        private void OnFnEditPastExperienceOperationCompleted(object arg) {
            if ((this.FnEditPastExperienceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditPastExperienceCompleted(this, new FnEditPastExperienceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeletePastExperience", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeletePastExperience_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeletePastExperience(string vendorNo, int lineno) {
            object[] results = this.Invoke("FnDeletePastExperience", new object[] {
                        vendorNo,
                        lineno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeletePastExperienceAsync(string vendorNo, int lineno) {
            this.FnDeletePastExperienceAsync(vendorNo, lineno, null);
        }
        
        /// <remarks/>
        public void FnDeletePastExperienceAsync(string vendorNo, int lineno, object userState) {
            if ((this.FnDeletePastExperienceOperationCompleted == null)) {
                this.FnDeletePastExperienceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeletePastExperienceOperationCompleted);
            }
            this.InvokeAsync("FnDeletePastExperience", new object[] {
                        vendorNo,
                        lineno}, this.FnDeletePastExperienceOperationCompleted, userState);
        }
        
        private void OnFnDeletePastExperienceOperationCompleted(object arg) {
            if ((this.FnDeletePastExperienceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeletePastExperienceCompleted(this, new FnDeletePastExperienceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertStaff(string vendorNo, string staffnumber, string staffname, string profession, string currentdesignation, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofbirth, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime joiningdate, int yearsinthefirm, string staffphonenumber, string staffnationality, string staffemail) {
            object[] results = this.Invoke("FnInsertStaff", new object[] {
                        vendorNo,
                        staffnumber,
                        staffname,
                        profession,
                        currentdesignation,
                        dateofbirth,
                        joiningdate,
                        yearsinthefirm,
                        staffphonenumber,
                        staffnationality,
                        staffemail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertStaffAsync(string vendorNo, string staffnumber, string staffname, string profession, string currentdesignation, System.DateTime dateofbirth, System.DateTime joiningdate, int yearsinthefirm, string staffphonenumber, string staffnationality, string staffemail) {
            this.FnInsertStaffAsync(vendorNo, staffnumber, staffname, profession, currentdesignation, dateofbirth, joiningdate, yearsinthefirm, staffphonenumber, staffnationality, staffemail, null);
        }
        
        /// <remarks/>
        public void FnInsertStaffAsync(string vendorNo, string staffnumber, string staffname, string profession, string currentdesignation, System.DateTime dateofbirth, System.DateTime joiningdate, int yearsinthefirm, string staffphonenumber, string staffnationality, string staffemail, object userState) {
            if ((this.FnInsertStaffOperationCompleted == null)) {
                this.FnInsertStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertStaffOperationCompleted);
            }
            this.InvokeAsync("FnInsertStaff", new object[] {
                        vendorNo,
                        staffnumber,
                        staffname,
                        profession,
                        currentdesignation,
                        dateofbirth,
                        joiningdate,
                        yearsinthefirm,
                        staffphonenumber,
                        staffnationality,
                        staffemail}, this.FnInsertStaffOperationCompleted, userState);
        }
        
        private void OnFnInsertStaffOperationCompleted(object arg) {
            if ((this.FnInsertStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertStaffCompleted(this, new FnInsertStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnEditStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnEditStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditStaff(string vendorNo, int lineno, string staffnumber, string staffname, string profession, string currentdesignation, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofbirth, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime joiningdate, int yearsinthefirm, string staffphonenumber, string staffnationality, string staffemail) {
            object[] results = this.Invoke("FnEditStaff", new object[] {
                        vendorNo,
                        lineno,
                        staffnumber,
                        staffname,
                        profession,
                        currentdesignation,
                        dateofbirth,
                        joiningdate,
                        yearsinthefirm,
                        staffphonenumber,
                        staffnationality,
                        staffemail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditStaffAsync(string vendorNo, int lineno, string staffnumber, string staffname, string profession, string currentdesignation, System.DateTime dateofbirth, System.DateTime joiningdate, int yearsinthefirm, string staffphonenumber, string staffnationality, string staffemail) {
            this.FnEditStaffAsync(vendorNo, lineno, staffnumber, staffname, profession, currentdesignation, dateofbirth, joiningdate, yearsinthefirm, staffphonenumber, staffnationality, staffemail, null);
        }
        
        /// <remarks/>
        public void FnEditStaffAsync(string vendorNo, int lineno, string staffnumber, string staffname, string profession, string currentdesignation, System.DateTime dateofbirth, System.DateTime joiningdate, int yearsinthefirm, string staffphonenumber, string staffnationality, string staffemail, object userState) {
            if ((this.FnEditStaffOperationCompleted == null)) {
                this.FnEditStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditStaffOperationCompleted);
            }
            this.InvokeAsync("FnEditStaff", new object[] {
                        vendorNo,
                        lineno,
                        staffnumber,
                        staffname,
                        profession,
                        currentdesignation,
                        dateofbirth,
                        joiningdate,
                        yearsinthefirm,
                        staffphonenumber,
                        staffnationality,
                        staffemail}, this.FnEditStaffOperationCompleted, userState);
        }
        
        private void OnFnEditStaffOperationCompleted(object arg) {
            if ((this.FnEditStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditStaffCompleted(this, new FnEditStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteStaff(string vendorNo, int lineno) {
            object[] results = this.Invoke("FnDeleteStaff", new object[] {
                        vendorNo,
                        lineno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteStaffAsync(string vendorNo, int lineno) {
            this.FnDeleteStaffAsync(vendorNo, lineno, null);
        }
        
        /// <remarks/>
        public void FnDeleteStaffAsync(string vendorNo, int lineno, object userState) {
            if ((this.FnDeleteStaffOperationCompleted == null)) {
                this.FnDeleteStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteStaffOperationCompleted);
            }
            this.InvokeAsync("FnDeleteStaff", new object[] {
                        vendorNo,
                        lineno}, this.FnDeleteStaffOperationCompleted, userState);
        }
        
        private void OnFnDeleteStaffOperationCompleted(object arg) {
            if ((this.FnDeleteStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteStaffCompleted(this, new FnDeleteStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertVendorRegDocs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertVendorRegDocs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertVendorRegDocs(string vendorNo, string documenttoupload, string externaldocumentno, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime issuedate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime expirydate, string filename, string documentlink) {
            object[] results = this.Invoke("FnInsertVendorRegDocs", new object[] {
                        vendorNo,
                        documenttoupload,
                        externaldocumentno,
                        issuedate,
                        expirydate,
                        filename,
                        documentlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertVendorRegDocsAsync(string vendorNo, string documenttoupload, string externaldocumentno, System.DateTime issuedate, System.DateTime expirydate, string filename, string documentlink) {
            this.FnInsertVendorRegDocsAsync(vendorNo, documenttoupload, externaldocumentno, issuedate, expirydate, filename, documentlink, null);
        }
        
        /// <remarks/>
        public void FnInsertVendorRegDocsAsync(string vendorNo, string documenttoupload, string externaldocumentno, System.DateTime issuedate, System.DateTime expirydate, string filename, string documentlink, object userState) {
            if ((this.FnInsertVendorRegDocsOperationCompleted == null)) {
                this.FnInsertVendorRegDocsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertVendorRegDocsOperationCompleted);
            }
            this.InvokeAsync("FnInsertVendorRegDocs", new object[] {
                        vendorNo,
                        documenttoupload,
                        externaldocumentno,
                        issuedate,
                        expirydate,
                        filename,
                        documentlink}, this.FnInsertVendorRegDocsOperationCompleted, userState);
        }
        
        private void OnFnInsertVendorRegDocsOperationCompleted(object arg) {
            if ((this.FnInsertVendorRegDocsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertVendorRegDocsCompleted(this, new FnInsertVendorRegDocsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteVendorRegDocs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteVendorRegDocs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteVendorRegDocs(string vendorNo, int lineno) {
            object[] results = this.Invoke("FnDeleteVendorRegDocs", new object[] {
                        vendorNo,
                        lineno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteVendorRegDocsAsync(string vendorNo, int lineno) {
            this.FnDeleteVendorRegDocsAsync(vendorNo, lineno, null);
        }
        
        /// <remarks/>
        public void FnDeleteVendorRegDocsAsync(string vendorNo, int lineno, object userState) {
            if ((this.FnDeleteVendorRegDocsOperationCompleted == null)) {
                this.FnDeleteVendorRegDocsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteVendorRegDocsOperationCompleted);
            }
            this.InvokeAsync("FnDeleteVendorRegDocs", new object[] {
                        vendorNo,
                        lineno}, this.FnDeleteVendorRegDocsOperationCompleted, userState);
        }
        
        private void OnFnDeleteVendorRegDocsOperationCompleted(object arg) {
            if ((this.FnDeleteVendorRegDocsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteVendorRegDocsCompleted(this, new FnDeleteVendorRegDocsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitProfile", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitProfile_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitProfile(string vendorNo) {
            object[] results = this.Invoke("FnSubmitProfile", new object[] {
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitProfileAsync(string vendorNo) {
            this.FnSubmitProfileAsync(vendorNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitProfileAsync(string vendorNo, object userState) {
            if ((this.FnSubmitProfileOperationCompleted == null)) {
                this.FnSubmitProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitProfileOperationCompleted);
            }
            this.InvokeAsync("FnSubmitProfile", new object[] {
                        vendorNo}, this.FnSubmitProfileOperationCompleted, userState);
        }
        
        private void OnFnSubmitProfileOperationCompleted(object arg) {
            if ((this.FnSubmitProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitProfileCompleted(this, new FnSubmitProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:ResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="ResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ResetPassword(string employeeNumbera45idNumber) {
            object[] results = this.Invoke("ResetPassword", new object[] {
                        employeeNumbera45idNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string employeeNumbera45idNumber) {
            this.ResetPasswordAsync(employeeNumbera45idNumber, null);
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string employeeNumbera45idNumber, object userState) {
            if ((this.ResetPasswordOperationCompleted == null)) {
                this.ResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetPassword", new object[] {
                        employeeNumbera45idNumber}, this.ResetPasswordOperationCompleted, userState);
        }
        
        private void OnResetPasswordOperationCompleted(object arg) {
            if ((this.ResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:ChangePassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="ChangePassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ChangePassword(string employeeNo, string currentPassword, string newPassword, string confirmPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        employeeNo,
                        currentPassword,
                        newPassword,
                        confirmPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string employeeNo, string currentPassword, string newPassword, string confirmPassword) {
            this.ChangePasswordAsync(employeeNo, currentPassword, newPassword, confirmPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string employeeNo, string currentPassword, string newPassword, string confirmPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        employeeNo,
                        currentPassword,
                        newPassword,
                        confirmPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:CancelPurchaseRequisitionApp" +
            "roval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="CancelPurchaseRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelPurchaseRequisitionApproval(string employeeNo, string requisitionNo) {
            object[] results = this.Invoke("CancelPurchaseRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelPurchaseRequisitionApprovalAsync(string employeeNo, string requisitionNo) {
            this.CancelPurchaseRequisitionApprovalAsync(employeeNo, requisitionNo, null);
        }
        
        /// <remarks/>
        public void CancelPurchaseRequisitionApprovalAsync(string employeeNo, string requisitionNo, object userState) {
            if ((this.CancelPurchaseRequisitionApprovalOperationCompleted == null)) {
                this.CancelPurchaseRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelPurchaseRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelPurchaseRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo}, this.CancelPurchaseRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnCancelPurchaseRequisitionApprovalOperationCompleted(object arg) {
            if ((this.CancelPurchaseRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelPurchaseRequisitionApprovalCompleted(this, new CancelPurchaseRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:SendPurchaseRequisitionAppro" +
            "val", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="SendPurchaseRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendPurchaseRequisitionApproval(string employeeNo, string requisitionNo) {
            object[] results = this.Invoke("SendPurchaseRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendPurchaseRequisitionApprovalAsync(string employeeNo, string requisitionNo) {
            this.SendPurchaseRequisitionApprovalAsync(employeeNo, requisitionNo, null);
        }
        
        /// <remarks/>
        public void SendPurchaseRequisitionApprovalAsync(string employeeNo, string requisitionNo, object userState) {
            if ((this.SendPurchaseRequisitionApprovalOperationCompleted == null)) {
                this.SendPurchaseRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPurchaseRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("SendPurchaseRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo}, this.SendPurchaseRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnSendPurchaseRequisitionApprovalOperationCompleted(object arg) {
            if ((this.SendPurchaseRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPurchaseRequisitionApprovalCompleted(this, new SendPurchaseRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:DeleteRequisitionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="DeleteRequisitionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteRequisitionLine(string requisitionNo, int lineNo) {
            object[] results = this.Invoke("DeleteRequisitionLine", new object[] {
                        requisitionNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRequisitionLineAsync(string requisitionNo, int lineNo) {
            this.DeleteRequisitionLineAsync(requisitionNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeleteRequisitionLineAsync(string requisitionNo, int lineNo, object userState) {
            if ((this.DeleteRequisitionLineOperationCompleted == null)) {
                this.DeleteRequisitionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRequisitionLineOperationCompleted);
            }
            this.InvokeAsync("DeleteRequisitionLine", new object[] {
                        requisitionNo,
                        lineNo}, this.DeleteRequisitionLineOperationCompleted, userState);
        }
        
        private void OnDeleteRequisitionLineOperationCompleted(object arg) {
            if ((this.DeleteRequisitionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRequisitionLineCompleted(this, new DeleteRequisitionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnCreateRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnCreateRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateRequisition(string docno, string empNo, string description, string location, string project, string currency, string processtype, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime duedate) {
            object[] results = this.Invoke("FnCreateRequisition", new object[] {
                        docno,
                        empNo,
                        description,
                        location,
                        project,
                        currency,
                        processtype,
                        duedate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateRequisitionAsync(string docno, string empNo, string description, string location, string project, string currency, string processtype, System.DateTime duedate) {
            this.FnCreateRequisitionAsync(docno, empNo, description, location, project, currency, processtype, duedate, null);
        }
        
        /// <remarks/>
        public void FnCreateRequisitionAsync(string docno, string empNo, string description, string location, string project, string currency, string processtype, System.DateTime duedate, object userState) {
            if ((this.FnCreateRequisitionOperationCompleted == null)) {
                this.FnCreateRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateRequisitionOperationCompleted);
            }
            this.InvokeAsync("FnCreateRequisition", new object[] {
                        docno,
                        empNo,
                        description,
                        location,
                        project,
                        currency,
                        processtype,
                        duedate}, this.FnCreateRequisitionOperationCompleted, userState);
        }
        
        private void OnFnCreateRequisitionOperationCompleted(object arg) {
            if ((this.FnCreateRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateRequisitionCompleted(this, new FnCreateRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnCreateRequisitionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnCreateRequisitionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateRequisitionLine(string docNo, string transactioncode, int qtyRequested, int noStaff, decimal directunitcost, string desc, string activitynumber) {
            object[] results = this.Invoke("FnCreateRequisitionLine", new object[] {
                        docNo,
                        transactioncode,
                        qtyRequested,
                        noStaff,
                        directunitcost,
                        desc,
                        activitynumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateRequisitionLineAsync(string docNo, string transactioncode, int qtyRequested, int noStaff, decimal directunitcost, string desc, string activitynumber) {
            this.FnCreateRequisitionLineAsync(docNo, transactioncode, qtyRequested, noStaff, directunitcost, desc, activitynumber, null);
        }
        
        /// <remarks/>
        public void FnCreateRequisitionLineAsync(string docNo, string transactioncode, int qtyRequested, int noStaff, decimal directunitcost, string desc, string activitynumber, object userState) {
            if ((this.FnCreateRequisitionLineOperationCompleted == null)) {
                this.FnCreateRequisitionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateRequisitionLineOperationCompleted);
            }
            this.InvokeAsync("FnCreateRequisitionLine", new object[] {
                        docNo,
                        transactioncode,
                        qtyRequested,
                        noStaff,
                        directunitcost,
                        desc,
                        activitynumber}, this.FnCreateRequisitionLineOperationCompleted, userState);
        }
        
        private void OnFnCreateRequisitionLineOperationCompleted(object arg) {
            if ((this.FnCreateRequisitionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateRequisitionLineCompleted(this, new FnCreateRequisitionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnConsultantGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnConsultantGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnConsultantGeneralDetails(string vendono, string name, string phone, string country, string email, string address, string taxno) {
            object[] results = this.Invoke("FnConsultantGeneralDetails", new object[] {
                        vendono,
                        name,
                        phone,
                        country,
                        email,
                        address,
                        taxno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnConsultantGeneralDetailsAsync(string vendono, string name, string phone, string country, string email, string address, string taxno) {
            this.FnConsultantGeneralDetailsAsync(vendono, name, phone, country, email, address, taxno, null);
        }
        
        /// <remarks/>
        public void FnConsultantGeneralDetailsAsync(string vendono, string name, string phone, string country, string email, string address, string taxno, object userState) {
            if ((this.FnConsultantGeneralDetailsOperationCompleted == null)) {
                this.FnConsultantGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnConsultantGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("FnConsultantGeneralDetails", new object[] {
                        vendono,
                        name,
                        phone,
                        country,
                        email,
                        address,
                        taxno}, this.FnConsultantGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnFnConsultantGeneralDetailsOperationCompleted(object arg) {
            if ((this.FnConsultantGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnConsultantGeneralDetailsCompleted(this, new FnConsultantGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertConsultantQualificat" +
            "ion", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertConsultantQualification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertConsultantQualification(string vendorno, string qualification, int year, int duration) {
            object[] results = this.Invoke("FnInsertConsultantQualification", new object[] {
                        vendorno,
                        qualification,
                        year,
                        duration});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertConsultantQualificationAsync(string vendorno, string qualification, int year, int duration) {
            this.FnInsertConsultantQualificationAsync(vendorno, qualification, year, duration, null);
        }
        
        /// <remarks/>
        public void FnInsertConsultantQualificationAsync(string vendorno, string qualification, int year, int duration, object userState) {
            if ((this.FnInsertConsultantQualificationOperationCompleted == null)) {
                this.FnInsertConsultantQualificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertConsultantQualificationOperationCompleted);
            }
            this.InvokeAsync("FnInsertConsultantQualification", new object[] {
                        vendorno,
                        qualification,
                        year,
                        duration}, this.FnInsertConsultantQualificationOperationCompleted, userState);
        }
        
        private void OnFnInsertConsultantQualificationOperationCompleted(object arg) {
            if ((this.FnInsertConsultantQualificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertConsultantQualificationCompleted(this, new FnInsertConsultantQualificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnUpdateConsultantQualificat" +
            "ion", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnUpdateConsultantQualification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateConsultantQualification(int entryno, string vendorno, string qualification, int year, int duration) {
            object[] results = this.Invoke("FnUpdateConsultantQualification", new object[] {
                        entryno,
                        vendorno,
                        qualification,
                        year,
                        duration});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateConsultantQualificationAsync(int entryno, string vendorno, string qualification, int year, int duration) {
            this.FnUpdateConsultantQualificationAsync(entryno, vendorno, qualification, year, duration, null);
        }
        
        /// <remarks/>
        public void FnUpdateConsultantQualificationAsync(int entryno, string vendorno, string qualification, int year, int duration, object userState) {
            if ((this.FnUpdateConsultantQualificationOperationCompleted == null)) {
                this.FnUpdateConsultantQualificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateConsultantQualificationOperationCompleted);
            }
            this.InvokeAsync("FnUpdateConsultantQualification", new object[] {
                        entryno,
                        vendorno,
                        qualification,
                        year,
                        duration}, this.FnUpdateConsultantQualificationOperationCompleted, userState);
        }
        
        private void OnFnUpdateConsultantQualificationOperationCompleted(object arg) {
            if ((this.FnUpdateConsultantQualificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateConsultantQualificationCompleted(this, new FnUpdateConsultantQualificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteConsultantQualificat" +
            "ion", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteConsultantQualification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteConsultantQualification(int entryno, string vendorno) {
            object[] results = this.Invoke("FnDeleteConsultantQualification", new object[] {
                        entryno,
                        vendorno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteConsultantQualificationAsync(int entryno, string vendorno) {
            this.FnDeleteConsultantQualificationAsync(entryno, vendorno, null);
        }
        
        /// <remarks/>
        public void FnDeleteConsultantQualificationAsync(int entryno, string vendorno, object userState) {
            if ((this.FnDeleteConsultantQualificationOperationCompleted == null)) {
                this.FnDeleteConsultantQualificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteConsultantQualificationOperationCompleted);
            }
            this.InvokeAsync("FnDeleteConsultantQualification", new object[] {
                        entryno,
                        vendorno}, this.FnDeleteConsultantQualificationOperationCompleted, userState);
        }
        
        private void OnFnDeleteConsultantQualificationOperationCompleted(object arg) {
            if ((this.FnDeleteConsultantQualificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteConsultantQualificationCompleted(this, new FnDeleteConsultantQualificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertConsultantReferee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertConsultantReferee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertConsultantReferee(string vendorno, string name, int phone, string email) {
            object[] results = this.Invoke("FnInsertConsultantReferee", new object[] {
                        vendorno,
                        name,
                        phone,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertConsultantRefereeAsync(string vendorno, string name, int phone, string email) {
            this.FnInsertConsultantRefereeAsync(vendorno, name, phone, email, null);
        }
        
        /// <remarks/>
        public void FnInsertConsultantRefereeAsync(string vendorno, string name, int phone, string email, object userState) {
            if ((this.FnInsertConsultantRefereeOperationCompleted == null)) {
                this.FnInsertConsultantRefereeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertConsultantRefereeOperationCompleted);
            }
            this.InvokeAsync("FnInsertConsultantReferee", new object[] {
                        vendorno,
                        name,
                        phone,
                        email}, this.FnInsertConsultantRefereeOperationCompleted, userState);
        }
        
        private void OnFnInsertConsultantRefereeOperationCompleted(object arg) {
            if ((this.FnInsertConsultantRefereeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertConsultantRefereeCompleted(this, new FnInsertConsultantRefereeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnUpdateConsultantReferee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnUpdateConsultantReferee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateConsultantReferee(int entryno, string vendorno, string name, int phone, string email) {
            object[] results = this.Invoke("FnUpdateConsultantReferee", new object[] {
                        entryno,
                        vendorno,
                        name,
                        phone,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateConsultantRefereeAsync(int entryno, string vendorno, string name, int phone, string email) {
            this.FnUpdateConsultantRefereeAsync(entryno, vendorno, name, phone, email, null);
        }
        
        /// <remarks/>
        public void FnUpdateConsultantRefereeAsync(int entryno, string vendorno, string name, int phone, string email, object userState) {
            if ((this.FnUpdateConsultantRefereeOperationCompleted == null)) {
                this.FnUpdateConsultantRefereeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateConsultantRefereeOperationCompleted);
            }
            this.InvokeAsync("FnUpdateConsultantReferee", new object[] {
                        entryno,
                        vendorno,
                        name,
                        phone,
                        email}, this.FnUpdateConsultantRefereeOperationCompleted, userState);
        }
        
        private void OnFnUpdateConsultantRefereeOperationCompleted(object arg) {
            if ((this.FnUpdateConsultantRefereeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateConsultantRefereeCompleted(this, new FnUpdateConsultantRefereeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteConsultantReferee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteConsultantReferee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteConsultantReferee(int entryno, string vendorno) {
            object[] results = this.Invoke("FnDeleteConsultantReferee", new object[] {
                        entryno,
                        vendorno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteConsultantRefereeAsync(int entryno, string vendorno) {
            this.FnDeleteConsultantRefereeAsync(entryno, vendorno, null);
        }
        
        /// <remarks/>
        public void FnDeleteConsultantRefereeAsync(int entryno, string vendorno, object userState) {
            if ((this.FnDeleteConsultantRefereeOperationCompleted == null)) {
                this.FnDeleteConsultantRefereeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteConsultantRefereeOperationCompleted);
            }
            this.InvokeAsync("FnDeleteConsultantReferee", new object[] {
                        entryno,
                        vendorno}, this.FnDeleteConsultantRefereeOperationCompleted, userState);
        }
        
        private void OnFnDeleteConsultantRefereeOperationCompleted(object arg) {
            if ((this.FnDeleteConsultantRefereeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteConsultantRefereeCompleted(this, new FnDeleteConsultantRefereeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertConsultantRegDocs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertConsultantRegDocs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertConsultantRegDocs(string vendorNo, string documenttoupload, string filename, string documentlink) {
            object[] results = this.Invoke("FnInsertConsultantRegDocs", new object[] {
                        vendorNo,
                        documenttoupload,
                        filename,
                        documentlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertConsultantRegDocsAsync(string vendorNo, string documenttoupload, string filename, string documentlink) {
            this.FnInsertConsultantRegDocsAsync(vendorNo, documenttoupload, filename, documentlink, null);
        }
        
        /// <remarks/>
        public void FnInsertConsultantRegDocsAsync(string vendorNo, string documenttoupload, string filename, string documentlink, object userState) {
            if ((this.FnInsertConsultantRegDocsOperationCompleted == null)) {
                this.FnInsertConsultantRegDocsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertConsultantRegDocsOperationCompleted);
            }
            this.InvokeAsync("FnInsertConsultantRegDocs", new object[] {
                        vendorNo,
                        documenttoupload,
                        filename,
                        documentlink}, this.FnInsertConsultantRegDocsOperationCompleted, userState);
        }
        
        private void OnFnInsertConsultantRegDocsOperationCompleted(object arg) {
            if ((this.FnInsertConsultantRegDocsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertConsultantRegDocsCompleted(this, new FnInsertConsultantRegDocsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnUpdateTenderLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnUpdateTenderLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateTenderLine(int entryno, string tenderno, decimal unitprice, decimal totalprice, decimal vatinc, decimal vatexc) {
            object[] results = this.Invoke("FnUpdateTenderLine", new object[] {
                        entryno,
                        tenderno,
                        unitprice,
                        totalprice,
                        vatinc,
                        vatexc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateTenderLineAsync(int entryno, string tenderno, decimal unitprice, decimal totalprice, decimal vatinc, decimal vatexc) {
            this.FnUpdateTenderLineAsync(entryno, tenderno, unitprice, totalprice, vatinc, vatexc, null);
        }
        
        /// <remarks/>
        public void FnUpdateTenderLineAsync(int entryno, string tenderno, decimal unitprice, decimal totalprice, decimal vatinc, decimal vatexc, object userState) {
            if ((this.FnUpdateTenderLineOperationCompleted == null)) {
                this.FnUpdateTenderLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateTenderLineOperationCompleted);
            }
            this.InvokeAsync("FnUpdateTenderLine", new object[] {
                        entryno,
                        tenderno,
                        unitprice,
                        totalprice,
                        vatinc,
                        vatexc}, this.FnUpdateTenderLineOperationCompleted, userState);
        }
        
        private void OnFnUpdateTenderLineOperationCompleted(object arg) {
            if ((this.FnUpdateTenderLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateTenderLineCompleted(this, new FnUpdateTenderLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:Addemployeepassportphoto", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="Addemployeepassportphoto_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Addemployeepassportphoto(string employeeno, string photo) {
            object[] results = this.Invoke("Addemployeepassportphoto", new object[] {
                        employeeno,
                        photo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddemployeepassportphotoAsync(string employeeno, string photo) {
            this.AddemployeepassportphotoAsync(employeeno, photo, null);
        }
        
        /// <remarks/>
        public void AddemployeepassportphotoAsync(string employeeno, string photo, object userState) {
            if ((this.AddemployeepassportphotoOperationCompleted == null)) {
                this.AddemployeepassportphotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddemployeepassportphotoOperationCompleted);
            }
            this.InvokeAsync("Addemployeepassportphoto", new object[] {
                        employeeno,
                        photo}, this.AddemployeepassportphotoOperationCompleted, userState);
        }
        
        private void OnAddemployeepassportphotoOperationCompleted(object arg) {
            if ((this.AddemployeepassportphotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddemployeepassportphotoCompleted(this, new AddemployeepassportphotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnUpdateTenderLinePrice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnUpdateTenderLinePrice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateTenderLinePrice(int entryno, string tenderno, decimal unitprice, decimal totalprice, decimal vatinc, decimal vatexc) {
            object[] results = this.Invoke("FnUpdateTenderLinePrice", new object[] {
                        entryno,
                        tenderno,
                        unitprice,
                        totalprice,
                        vatinc,
                        vatexc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateTenderLinePriceAsync(int entryno, string tenderno, decimal unitprice, decimal totalprice, decimal vatinc, decimal vatexc) {
            this.FnUpdateTenderLinePriceAsync(entryno, tenderno, unitprice, totalprice, vatinc, vatexc, null);
        }
        
        /// <remarks/>
        public void FnUpdateTenderLinePriceAsync(int entryno, string tenderno, decimal unitprice, decimal totalprice, decimal vatinc, decimal vatexc, object userState) {
            if ((this.FnUpdateTenderLinePriceOperationCompleted == null)) {
                this.FnUpdateTenderLinePriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateTenderLinePriceOperationCompleted);
            }
            this.InvokeAsync("FnUpdateTenderLinePrice", new object[] {
                        entryno,
                        tenderno,
                        unitprice,
                        totalprice,
                        vatinc,
                        vatexc}, this.FnUpdateTenderLinePriceOperationCompleted, userState);
        }
        
        private void OnFnUpdateTenderLinePriceOperationCompleted(object arg) {
            if ((this.FnUpdateTenderLinePriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateTenderLinePriceCompleted(this, new FnUpdateTenderLinePriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitTender", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitTender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitTender(string tenderNo, string vendorNo) {
            object[] results = this.Invoke("FnSubmitTender", new object[] {
                        tenderNo,
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitTenderAsync(string tenderNo, string vendorNo) {
            this.FnSubmitTenderAsync(tenderNo, vendorNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitTenderAsync(string tenderNo, string vendorNo, object userState) {
            if ((this.FnSubmitTenderOperationCompleted == null)) {
                this.FnSubmitTenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitTenderOperationCompleted);
            }
            this.InvokeAsync("FnSubmitTender", new object[] {
                        tenderNo,
                        vendorNo}, this.FnSubmitTenderOperationCompleted, userState);
        }
        
        private void OnFnSubmitTenderOperationCompleted(object arg) {
            if ((this.FnSubmitTenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitTenderCompleted(this, new FnSubmitTenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnChangePasswordCompletedEventHandler(object sender, FnChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnResetPasswordCompletedEventHandler(object sender, FnResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ResetSendEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnReqforRegistrationCompletedEventHandler(object sender, FnReqforRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnReqforRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnReqforRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSupplierGeneralDetailsCompletedEventHandler(object sender, FnSupplierGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSupplierGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSupplierGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSupplierSpecialGroupCompletedEventHandler(object sender, FnSupplierSpecialGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSupplierSpecialGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSupplierSpecialGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCommContactDetailsCompletedEventHandler(object sender, FnCommContactDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCommContactDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCommContactDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnBusinessProfileDetailsCompletedEventHandler(object sender, FnBusinessProfileDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnBusinessProfileDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnBusinessProfileDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertBankDetailsCompletedEventHandler(object sender, FnInsertBankDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBankDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBankDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditBankDetailsCompletedEventHandler(object sender, FnEditBankDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditBankDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditBankDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteBankDetailsCompletedEventHandler(object sender, FnDeleteBankDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteBankDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteBankDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertShareholderDetailsCompletedEventHandler(object sender, FnInsertShareholderDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertShareholderDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertShareholderDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditShareholderDetailsCompletedEventHandler(object sender, FnEditShareholderDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditShareholderDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditShareholderDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteShareholderDetailsCompletedEventHandler(object sender, FnDeleteShareholderDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteShareholderDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteShareholderDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertLitigationCompletedEventHandler(object sender, FnInsertLitigationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertLitigationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertLitigationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditLitigationCompletedEventHandler(object sender, FnEditLitigationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditLitigationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditLitigationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteLitigationCompletedEventHandler(object sender, FnDeleteLitigationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteLitigationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteLitigationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertPastExperienceCompletedEventHandler(object sender, FnInsertPastExperienceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertPastExperienceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertPastExperienceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditPastExperienceCompletedEventHandler(object sender, FnEditPastExperienceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditPastExperienceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditPastExperienceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeletePastExperienceCompletedEventHandler(object sender, FnDeletePastExperienceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeletePastExperienceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeletePastExperienceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertStaffCompletedEventHandler(object sender, FnInsertStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditStaffCompletedEventHandler(object sender, FnEditStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteStaffCompletedEventHandler(object sender, FnDeleteStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertVendorRegDocsCompletedEventHandler(object sender, FnInsertVendorRegDocsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertVendorRegDocsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertVendorRegDocsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteVendorRegDocsCompletedEventHandler(object sender, FnDeleteVendorRegDocsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteVendorRegDocsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteVendorRegDocsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitProfileCompletedEventHandler(object sender, FnSubmitProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ResetPasswordCompletedEventHandler(object sender, ResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelPurchaseRequisitionApprovalCompletedEventHandler(object sender, CancelPurchaseRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelPurchaseRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelPurchaseRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendPurchaseRequisitionApprovalCompletedEventHandler(object sender, SendPurchaseRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPurchaseRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPurchaseRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteRequisitionLineCompletedEventHandler(object sender, DeleteRequisitionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRequisitionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRequisitionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateRequisitionCompletedEventHandler(object sender, FnCreateRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateRequisitionLineCompletedEventHandler(object sender, FnCreateRequisitionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateRequisitionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateRequisitionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnConsultantGeneralDetailsCompletedEventHandler(object sender, FnConsultantGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnConsultantGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnConsultantGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertConsultantQualificationCompletedEventHandler(object sender, FnInsertConsultantQualificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertConsultantQualificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertConsultantQualificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUpdateConsultantQualificationCompletedEventHandler(object sender, FnUpdateConsultantQualificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateConsultantQualificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateConsultantQualificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteConsultantQualificationCompletedEventHandler(object sender, FnDeleteConsultantQualificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteConsultantQualificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteConsultantQualificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertConsultantRefereeCompletedEventHandler(object sender, FnInsertConsultantRefereeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertConsultantRefereeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertConsultantRefereeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUpdateConsultantRefereeCompletedEventHandler(object sender, FnUpdateConsultantRefereeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateConsultantRefereeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateConsultantRefereeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteConsultantRefereeCompletedEventHandler(object sender, FnDeleteConsultantRefereeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteConsultantRefereeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteConsultantRefereeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertConsultantRegDocsCompletedEventHandler(object sender, FnInsertConsultantRegDocsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertConsultantRegDocsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertConsultantRegDocsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUpdateTenderLineCompletedEventHandler(object sender, FnUpdateTenderLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateTenderLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateTenderLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddemployeepassportphotoCompletedEventHandler(object sender, AddemployeepassportphotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddemployeepassportphotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddemployeepassportphotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUpdateTenderLinePriceCompletedEventHandler(object sender, FnUpdateTenderLinePriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateTenderLinePriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateTenderLinePriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitTenderCompletedEventHandler(object sender, FnSubmitTenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitTenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitTenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591